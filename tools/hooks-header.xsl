<?xml version="1.0"?>
<xsl:stylesheet version="1.1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="text"/>
  <xsl:template match="/hooks">

<!-- header -->
<xsl:text><![CDATA[
// Generated by hooks-header.xsl
// DO NOT EDIT

#ifndef HOOKS_H
#define HOOKS_H

#include "scriptix/function.h"

class Room;
class Entity;
class Object;
class RoomExit;
class Character;
class Player;
class Npc;
class Zone;
class ScriptRestrictedWriter;
class ObjectBlueprint;

namespace Hooks {
	int add (StringArg name, Scriptix::ScriptFunction cb);
]]></xsl:text>

<!-- hook ids -->
<xsl:for-each select="hook">
<xsl:text>
	bool </xsl:text><xsl:value-of select="@name" /><xsl:text> (</xsl:text>
	<xsl:for-each select="arg">
		<xsl:if test="position()!=1">
			<xsl:text>, </xsl:text>
		</xsl:if>

		<xsl:choose>
			<xsl:when test="@type='String'">
				<xsl:text>StringArg </xsl:text>
			</xsl:when>
			<xsl:when test="@type='Integer'">
				<xsl:text>long </xsl:text>
			</xsl:when>
			<xsl:when test="@type='Boolean'">
				<xsl:text>bool </xsl:text>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="@type" />
				<xsl:text>* </xsl:text>
			</xsl:otherwise>
		</xsl:choose>
		<xsl:text>_</xsl:text><xsl:value-of select="@name" />
	</xsl:for-each>
	<xsl:text>);
</xsl:text>
</xsl:for-each>

<!-- footer -->
<xsl:text><![CDATA[
} // namespace Hooks

#endif // HOOKS_H
]]></xsl:text>

  </xsl:template>
</xsl:stylesheet>
