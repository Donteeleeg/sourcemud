<?xml version="1.0"?>
<xsl:stylesheet version="1.1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="text"/>
  <xsl:template match="/parse-interface">
    <!-- header -->
// Generated by tools/parse-code.xsl
// DO NOT EDIT

#include "parse.h"

    <!-- includes -->
    <xsl:for-each select="include">
      #include "<xsl:value-of select="." />"
    </xsl:for-each>

    <!-- function block -->
namespace parse {
  int exec_command (const StreamControl&amp; stream, StringArg _cmd_name, ParseArgs&amp; _cmd_argv)
  {

    <!-- all commands -->
    <xsl:apply-templates select="command" />

    <!-- end function block -->
    return -1;
  }
}
<xsl:text>
</xsl:text> <!-- newline at eof -->
  </xsl:template>

  <xsl:template match="command">
    <!-- declare code block -->
    if (str_eq(_cmd_name, "<xsl:value-of select="@name" />")) {

    <!-- args -->
      if (_cmd_argv.size() != <xsl:value-of select="count(arg)" />)
        return -1;
    <xsl:for-each select="arg">
      <xsl:choose>
        <xsl:when test="@type='string'">String <xsl:value-of select="@name" /> = _cmd_argv[<xsl:value-of select="position()-1" />].get_string();</xsl:when>
        <xsl:when test="@type='entity'">String <xsl:value-of select="@name" /> = _cmd_argv[<xsl:value-of select="position()-1" />].get_entity();</xsl:when>
        <xsl:otherwise>UNKNOWN_TYPE <xsl:value-of select="@name" /> = "<xsl:value-of select="@type" />";</xsl:otherwise>
      </xsl:choose>
    </xsl:for-each>

    <!-- code -->
    <xsl:apply-templates select="code" />

    <!-- finish -->
      return 0;
    }
  </xsl:template>

  <xsl:template match="code">
    <xsl:if test="function-available('saxon:line-number')" xmlns:saxon="http://icl.com/saxon">
<xsl:text>
#line </xsl:text><xsl:value-of select="saxon:line-number()"/> <xsl:text> "gen/parse-intr.xml"
</xsl:text>
    </xsl:if>
    <xsl:value-of select="."/>
  </xsl:template>
</xsl:stylesheet>
<!-- vim: set filetype=xml tabstop=2 shiftwidth=2 expandtab: -->
