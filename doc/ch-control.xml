<!DOCTYPE chatper PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<chapter id="ch_control">
	<title>Control Socket Interface</title>
	<section>
		<title>Introduction</title>
		<para>The new control interface feature of AweMUD allows a program to open a connection to the MUD using a UNIX domain socket, and issuing commands to the running AweMUD server.  These commands can be anything imaginable that is added to the code.  The basic intent, however, is to offer administration capabilities without needing to connect as a player.  The interface can also allow scripts and applications to programmatically control AweMUD.  This requires an easily parsable protocol.</para>
		<para>The protocl is line based.  The protocol is client driven.  The server only outputs information in response to a client command, or upon initial connection.  Clients send commands to the server as a single line, and the server responds with one or more lines of text.</para>
		<para>The server may then send one or more lines of response.  Responses are either error messages or success messages.  Success messages may be preceded by data messages.</para>
		<para>Upon first connecting, the server will return either a single success message, or an error message.  In the case of an error response, the client is immediately disconnected.</para>
		<para>The tool awemud-ctrl (src/awemud-ctrl in the build directory) allows communications with the server for utilizing the CIP (Control Interface Protocol).  In order to enable the CIP mechanism, the server/control setting in the awemud.conf file must be un-commented-out.  If you use a different socket path than the default, you may pass the socket path to the awemud-ctrl utility as a command-line argument.</para>
		<para>The socket will by default only be usable by the user who started the AweMUD server.  Note that if you configure AweMUD to switch user/group IDs after startup, the CIP socket will *not* use the specified IDs, but the original ID (root being the only option in this case for most OSes).</para>
	</section>
	<section>
		<title>Commands</title>
		<para>Once connected to the socket, commands may be issued.  A command is a string of text formatted onto a single line.  Commands are comprised of one or more words.  Each word is separated by one or more spaces.  Tabs do not separate words.  The \ (backslash) character will escape the following character.  A \n sequence is interpreted as a newline.  Any other escape sequence is taken as a literal.  (For example, \\ is interpreted as \, and \" is interpreted as ".)  Finally, if an unescaped " (double quotes) character is found then all following spaces until the next unescaped " are considred part of the word.</para>
		<para>Words after the first are called parameters.  The parameters given to a command may vary depending on the exact parameters used.  If an incorrect number of parameters, or invalid values, are given to a command, it may return a BADPARAM error.</para>
		<example>
			<title>Commands and arguments</title>
			<screen>command arg1 arg2 arg3
command "this arg has spaces"
command This\ is\ one\ arg
command "This is a block of\ntext with a newline"
command !@#\"\\ arg2</screen>
		</example>
	</section>
	<section>
		<title>Responses</title>
		<para>A success or error message comes in the form of a plus (+) followed by an error code.  Error codes are single words formed of all uppercase characters.  Examples are OK, BADCOMMAND, NOTFOUND and BADPARAM.</para>
		<para>If the error code is OK, the message is a success message.  For any other error code, the message is a failure (error) message.</para> 
		<para>An optional human-friendly string may followed the error code.  The message and the code are separated by a single space.  These messages are not intended to be machine parsed, but may be presented to users of utilities or applications that use the protocol.  (The messages are also useful to users utilizing the awemud-ctrl utility directly.)</para>
		<example>
			<title>Response codes</title>
			<screen>+NOACCESS You do not have permission to access this resource.
+BADCOMMAND Command not found.
+NOTFOUND
+BADPARAM Improper parameters given for command.
+OK
+OK Password changed</screen>
		</example>
		<para>When a command is successful, but before it has sent the success response, it may send one or more data lines.  If a data line is received, a successful response is guaranteed.  The success response line is in this case used as an end marker for the data lines.</para>
		<para>Each data line is prefixed with a single dash (-).  All of the information after the asterik is part of the data.</para>
		<para>Data may come in several forms.  The two most common are arbitrary block form, and key/value form.  Arbitrary value form is just a series of lines of data with no particular format.  This might be used to echo log messages or other blocks of text.</para>
		<para>Key value form is given as a key name, followed by an equal sign (=), followed by data.</para>
		<para>It is up to the client to know which commands return which kinds of data (if any) on success.</para>
		<example>
			<title>Response data</title>
			<screen>-This is an
-arbitrary block
-of text.
+OK
-KEY=some value
-key2=another value
-foo=bar
+OK</screen>
		</example>
	</section>
	<section>
		<title>Available Commands</title>
		<variablelist>
			<varlistentry>
				<term>newaccount</term>
				<listitem>

				<para>Adds a new account to the system.  The user, upon logging in, will enter
				character creation.  This can be used by web forms and such to create new
				accounts and allow the system to disable automatic new accounts.</para>

				<para>You can, after creating the account, use the chpass, chname, and chmail
				commands to set the account properties.</para>

				<para>The newaccount command takes a single argument which is a user name.</para>

				<example><screen>addaccount bob
+OK
addaccount invalid-username
+BADPARAM Invalid characters in account name </screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>build</term>
				<listitem>

				<para>Returns the build date and time of the server as a success value.</para>

				<example><screen>build
-Jan  8 2004 19:20:03
+OK </screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>chmail</term>
				<listitem>

				<para>Change a user's email address.  The username and new mail address must be
					given as parameters.  If a username is given that does not exist, a
					NOTFOUND error is returned.</para>

				<example><screen>chmail admin master@localhost.foo
+OK Mail address changed
chpass bogus weird@there.here
+NOTFOUND </screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>chname</term>
				<listitem>

				<para>Change a user's real name.  The username and new real name must be given
				as parameters.  If a username is given that does not exist, a NOTFOUND
				error is returned.</para>

				<example><screen>chname admin "The master"
+OK Name changed
chpass bogus Some random user
+NOTFOUND </screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>chpass</term>
				<listitem>

				<para>Change a user's password.  The username and new passphrase must be given
				as parameters.  If a username is given that does not exist, a NOTFOUND
				error is returned.</para>

				<example><screen>chpass admin test
+OK Password changed
chpass bogus test
+NOTFOUND </screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>disable</term>
				<listitem>

				<para>Disables an account.  If an account is disabled, no one may login to
				the account.  Returns a NOTFOUND error if the account doesn't exist.</para>

				<example><screen>disable admin
+OK Account disabled </screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>enable</term>
				<listitem>

				<para>Enables an account.  If an account is disabled, no one may login to the
				account.  Returns a NOTFOUND error if the account doesn't exist.</para>

				<example><screen>enable admin
+OK Account enabled </screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>login</term>
				<listitem>

				<para>Attempts to login to an account.</para>

				<example><screen>login admin password
+OK Welcome admin
login admin wrongpass
+NOTFOUND Incorrect account name or password
</screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>pcount</term>
				<listitem>

				<para>Returns the number of currently active players as a success value.</para>

				<example><screen>players
-23
+OK </screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>quit</term>
				<listitem>

				<para>Disconnects from the server.  Success message is given.</para>

				<example><screen>quit
+OK Farewell
[disconnected from server] </screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>setmaxactive</term>
				<listitem>

				<para>Sets the maximum number of characters an account is allowed to have
				active at any given time.  The first paramater is the account name, and
				the second parameter is the active character limit.  Use a limit of zero
				(0) to set the limit to the default, as specified in the awemud.conf
				configuration file.  Returns a NOTFOUND error if the account doesn't
				exist.</para>

				<example><screen>setmaxactive admin 2
+OK Account updated </screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>setmaxchars</term>
				<listitem>

				<para>Sets the maximum number of characters an account is allowed to have.  The
				first paramater is the account name, and the second parameter is the
				character limit.  Use a limit of zero (0) to set the limit to the
				default, as specified in the awemud.conf configuration file.  Returns a
				NOTFOUND error if the account doesn't exist.</para>

				<example><screen>setmaxchars admin 5
+OK Account updated </screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>showaccount</term>
				<listitem>

				<para>Displays the details of an account.  Returns a NOTFOUND error if the
				account doesn't exist.</para>

				<example><screen>showaccount admin
-ID=admin
-NAME=Administrator
-EMAIL=awemud@localhost
-MAXCHARS=3
-MAXACTIVE=1
-DISABLED=NO
-CHARACTERS=Admin,Tester
+OK</screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>shutdown</term>
				<listitem>

				<para>Shuts down the server immediately.</para>

				<example><screen>shutdown
+OK Shutting down </screen></example>

	 			</listitem>
			</varlistentry>
			<varlistentry>
				<term>version</term>
				<listitem>

				<para>Returns the current version of the server software as success value.</para>

				<example><screen>version
-0.21
+OK </screen></example>
	 			</listitem>
			</varlistentry>
		</variablelist>
	</section>
	<section>
		<title>Standard Response Codes</title>
		<variablelist>
			<varlistentry>
				<term>BADCOMMAND</term>
				<listitem><para> The command given does not exist, or is not recognized by the server.  Double check that the command is spelled properly.  </para></listitem>
			</varlistentry>
			<varlistentry>
				<term>BADPARAM</term>
				<listitem><para> The parameters given to the command are incorrect.  Check the documentation for the command to be sure you are sending the correct parameters.  The error message may provide more clues as to what exactly is wrong.  </para></listitem>
			</varlistentry>
			<varlistentry>
				<term>DUPLICATE</term>
				<listitem><para> A duplicate item was detected when duplicates are not allowed.  The error message will usually indicate what was duplicated.  </para></listitem>
			</varlistentry>
			<varlistentry>
				<term>INTERNAL</term>
				<listitem><para> An internal error has occured.  The error message will usually indicate what has happened in further detail.  </para></listitem>
			</varlistentry>
			<varlistentry>
				<term>NOACCESS</term>
				<listitem><para> You do not have access to the command, or one of its functions.  Another command to authenticate the connection may be needed before you can attempt the command or functionality.  </para></listitem>
			</varlistentry>
			<varlistentry>
				<term>NOTFOUND</term>
				<listitem><para> A requested resource does not exist or cannot be found.  </para></listitem>
			</varlistentry>
		</variablelist>
	</section>
</chapter>
