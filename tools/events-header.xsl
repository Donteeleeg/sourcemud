<?xml version="1.0"?>
<xsl:stylesheet version="1.1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="text"/>
  <xsl:template match="/events">

<!-- header -->
<xsl:text><![CDATA[
// Generated by events-header.xsl
// DO NOT EDIT

#ifndef EVENT_IDS_H
#define EVENT_IDS_H

#include "mud/event.h"

class Room;
class Entity;
class Object;
class RoomExit;
class Zone;

namespace Events {
]]></xsl:text>

<!-- event ids -->
<xsl:for-each select="event">
<xsl:text>	extern EventID ON_</xsl:text><xsl:value-of select="translate(name, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')"/><xsl:text>;
</xsl:text>

<xsl:text>	void send_</xsl:text><xsl:value-of select="name" /><xsl:text> (Room* room, Entity* actor</xsl:text>
	<xsl:for-each select="arg">
		<xsl:text>, </xsl:text>

		<xsl:choose>
			<xsl:when test="type='String'">
				<xsl:text>String </xsl:text>
			</xsl:when>
			<xsl:when test="type='Integer'">
				<xsl:text>long </xsl:text>
			</xsl:when>
			<xsl:when test="type='Boolean'">
				<xsl:text>bool </xsl:text>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="type" />
				<xsl:text>* </xsl:text>
			</xsl:otherwise>
		</xsl:choose>
		<xsl:value-of select="name" />
	</xsl:for-each>
	<xsl:text>);
</xsl:text>
</xsl:for-each>

<!-- footer -->
<xsl:text><![CDATA[
} // namespace Events

#endif // EVENT_IDS_H
]]></xsl:text>

  </xsl:template>
</xsl:stylesheet>
