# AweMUD Next Generation - Misc object blueprints
# Copyright (C) 2003-2005  AwesomePlay Productions Inc.
# Sean Middleditch <elanthis@awemud.net>

object_blueprint {
  blueprint.id = "currency"
}

object_blueprint {
  blueprint.id = "co_leather_backpack"
  blueprint.equip = "back"
  blueprint.name = "a leather backpack"
  blueprint.desc = "The leather backpack is very simple in design.  Intended for rugged travel, it is both sturdy and large."
  blueprint.weight = 8
  blueprint.container = "in"
}
object_blueprint {
  blueprint.id = "bank_note"
  blueprint.name = "a bank note"
  blueprint.parent = "currency"
  blueprint.desc = "The bank note is signed by the First Bank of the Lands, and is worth {1.cost} coins with any merchant who accepts bank notes."
  blueprint.weight = 1
  blueprint.cost = 1000
}
object_blueprint {
  blueprint.id = "npc_corpse"
  blueprint.name = "a corpse"
  blueprint.desc = "The {$self.name} appears fresh.  It is laying motionless on the ground, as every good corpse should."
  blueprint.weight = 10
  blueprint.cost = 0
  blueprint.container = "on"
  blueprint.rotting = true
}

object_blueprint {
  blueprint.id = "cave_waterfall_portal"
  blueprint.name = "a glowing portal"
  blueprint.desc = "The glowing portal's ovoid, smooth surface gives off a faint blue light as it rests against the northern cavern wall.  The various hues of blue that make up the swirling pattern on the portal's face seem almost at battle, with tides of darker blue giving way to hordes of pale blue, only to resurge and drive back the onslaught."
}

object_blueprint {
  blueprint.id = "raise_undead_talisman"
  blueprint.name = "a skull talisman"
  blueprint.desc = "The talisman is a small golden amulet in the shape of a skull.  Though hard to tell, the eyes appear to faintly glow red."

  action.raise = begin
    var room = self.getRoom();

    // raise messages (FIXME: dumb that we have to duplicate that here)
    user << @name(self, EN_DEF, true) << ' flashes a malevolent red as you raise it into the air.\n';
    user << @name(user, EN_INDEF, true) << ' raises ' << @name(self, EN_INDEF, false) << ' into the air, and ' << @name(self, EN_DEF, false) << ' flashes an evil red.\n';

    // find all corpses in the room
    foreach (var object in room.objects()) {
      // only if its a corpse
      if (object.isBlueprint('npc_corpse')) {
        
        // corpse must specify its NPC blueprint
        if (!String(object.npc_blueprint))
          continue;

        // get NPC blueprint
        var npc_blueprint = getNpcBlueprint(object.npc_blueprint);
        if (!npc_blueprint)
          continue;

        // check that the NPC has a raise_as attribute
        if (!String(npc_blueprint.raise_as))
          continue;

        // create undead NPC
        var undead = createNpcFromBlueprint(npc_blueprint.raise_as);
        if (!undead) {
          message("NPC blueprint with invalid raise_as: " + npc_blueprint.raise_as);
          continue;
        }

        // creation message, add to room, etc
        room << @name(object, EN_INDEF, true) << ' rises from the ground as ' << @name(undead, EN_INDEF, false) << '.\n';
        undead.enter(room, nil);
        object.destroy();
      }
    }

    // don't print default message
    return OBJACT_OK_QUIET;
  end
}

# vim: set shiftwidth=2 tabstop=2 expandtab:
